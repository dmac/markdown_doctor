#!/usr/bin/env ruby

require "rubygems"
require "redcarpet"
require "nokogiri"
require "pygments.rb"

HEADER = <<EOF
<link href="http://assets.github.com/stylesheets/bundles/github-92243db0daab07aa944d353c1ba062b9581bd321.css"
    type="text/css" rel="stylesheet" />
<link href="http://assets.github.com/stylesheets/bundles/github2-b4eff0bfa63304403db18c61e84e5af78b005dab.css"
    type="text/css" rel="stylesheet" />
<style type="text/css">
#main-wrapper {
width: 920px;
margin: 0 auto;
}
</style>
<div id="main-wrapper">
<div class="markdown-body">
EOF

FOOTER = <<EOF
</div>
</div>
EOF

def pygmentize_code_blocks(html)
  doc = Nokogiri::HTML(html)
  code_blocks = doc.css("pre code[class]").map(&:parent)

  code_blocks.each do |code|
    language = code.child.attribute("class").value
    pygmentized_html = Pygments.highlight(code.child.text, :lexer => language, :encoding => "utf-8",
        :nowrap => true, :stripnl => false, :stripall => false)
    new_node = Nokogiri::HTML.fragment(pygmentized_html)
    code.replace(new_node)
  end

  doc.to_html
end

text = ARGF.read
markdown = Redcarpet::Markdown.new(Redcarpet::Render::HTML, :fenced_code_blocks => true)

output = HEADER + pygmentize_code_blocks(markdown.render(text)) + FOOTER
puts output
